from urllib.parse import quote_plus


class Config(object):
    # Configuration de la base de données PostgreSQL
    SQLALCHEMY_DATABASE_URI = 'postgresql://user:pwd@lhost:port/db_name'
    SQLALCHEMY_TRACK_MODIFICATIONS = False
    LDAP_SERVER = 'ldaps://ldap.example.net'
    LDAP_USER = "cn=user,ou=users,dc=example,dc=net"
    LDAP_PASSWORD = "password"
    LDAP_SEARCH_BASE = 'ou=user,dc=example,dc=net'
    UPLOAD_FOLDER = 'app/uploads'
    DEFAULT_PWD_LAST_SET = 365
    MAIL_SERVER = 'smtp.example.net'
    MAIL_PORT = 25
    MAIL_USE_TLS = False
    MAIL_USERNAME = 'mail@example.net'
    OIDC_CLIENT_SECRETS = {
        'web': {
            'client_id': 'client_id_provided_by_auth_server',
            'client_secret': 'client_secret_provided_by_auth_server',
            'auth_uri': 'https://auth.example.net/oidc/oidcAuthorize',
            'token_uri': 'https://auth.example.net/oidc/oidcAccessToken',
            'userinfo_uri': 'https://auth.example.net/oidc/oidcProfile',
            'issuer': 'https://auth.example.net/oidc',
            'redirect_uris': [
                'http://127.0.0.1:5000/oidc_callback',
                # Mettre l'url de production
            ]
        }
    }
    OIDC_SCOPES = ['openid', 'email', 'profile']
    # False pour connection locale et True pour connection avec le serveur d'authentification
    OIDC_ENABLED = False
    ELASTICSEARCH_URL = 'http://elastic.example.net:9200'
    SCHEDULER_API_ENABLED = True # Pour activer le scheduler qui permet de planifier les tâches
